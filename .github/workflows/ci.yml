name: Project Pipeline
on:
  push:
    branches: [ main, develop ]

permissions:
  contents: read
  packages: write

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v5
        with:
          go-version: '1.25.1'
      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Run golangci-lint
        run: golangci-lint run --timeout=5m 

      - name: Build
        run: go build -v ./...

      - name: Test with the Go CLI
        run: go test -v ./...

  docker-build:
    runs-on: ubuntu-latest
    needs: quality-checks 
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/amillerrr/jwt-rbac-cors-app:latest
            ghcr.io/amillerrr/jwt-rbac-cors-app:${{ github.sha }}

  security-scan:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@v0.2.4
        with:
          image-ref: ghcr.io/amillerrr/jwt-rbac-cors-app:latest  
          severity: 'CRITICAL,HIGH'
          exit-code: '1'
